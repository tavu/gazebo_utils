<?xml version="1.0"?>
<launch>  
    <arg name="world_file"  default="$(find gazebo_utils)/worlds/w3.world"/>
    <arg name="gui" default="true"/>
    <!--origin -->    
    <!--<arg name="origin" default="-x -0.11 -y 2.6 -Y 1.23"/> -->
    <arg name="origin" default="-x -0.24 -y 1.0 -Y 0.87"/>
    
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>
    
    <arg name="base"/>
    <arg name="stacks"/>
    <arg name="3d_sensor"/>
  
    <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find gazebo_utils)/urdf/kobuki_hexagons_asus_xtion_pro.urdf.xacro'" />
  
    <param name="robot_description" command="$(arg urdf_file)" />
  
  <!-- Gazebo model spawner -->
    <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model" 
          args="$(arg origin) -unpause -urdf -param robot_description -model mobile_base"/>
  
    <!-- Velocity muxer -->
    <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
          args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
        
        <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
        <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
    </node>

    <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
    <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>
    
    
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>
  
    <!-- Fake laser -->
    <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
          args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
        
        <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="/camera_depth_frame"/>
        <param name="range_min" value="0.45"/>
        <remap from="image" to="/camera/depth/image_raw"/>
        <remap from="scan" to="/scan"/>
    </node>
            
    <include file="$(find depth_noise)/launch/depth_noise.launch" />
    <include file="$(find depth_rgb_sync)/launch/depth_rgb_sync.launch" />
    <include file="$(find tf_to_path)/launch/gt_to_path_gazebo.launch" />
    <!--<include file="$(find kfusion_ros)/launch/kfusion_ros_gazebo.launch"/>-->

    <node pkg = "rviz" type = "rviz" respawn = "false" name = "rviz" output = "screen" args ="-d $(find gazebo_utils)/config/gazebo_utils.rviz"/>

</launch>

